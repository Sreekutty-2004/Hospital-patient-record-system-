#include <stdio.h>
#include <string.h>

#define MAX_PATIENTS 100

// Structure to hold patient details
struct Patient {
    int id;
    char name[50];
    int age;
    char disease[50];
} patients[MAX_PATIENTS];

int patientCount = 0;

// Function to add a new patient record
void addPatient() {
    if (patientCount < MAX_PATIENTS) {
        printf("Enter Patient ID: ");
        scanf("%d", &patients[patientCount].id);
        printf("Enter Patient Name: ");
        scanf(" %[^\n]", patients[patientCount].name);
        printf("Enter Age: ");
        scanf("%d", &patients[patientCount].age);
        printf("Enter Disease: ");
        scanf(" %[^\n]", patients[patientCount].disease);
        
        printf("Patient added successfully!\n");
        patientCount++;
    } else {
        printf("Patient record is full!\n");
    }
}

// Function to display all patient records
void displayPatients() {
    if (patientCount == 0) {
        printf("No patient records found.\n");
        return;
    }
    
    printf("\n--- Patient Records ---\n");
    for (int i = 0; i < patientCount; i++) {
        printf("\nPatient ID: %d\n", patients[i].id);
        printf("Name: %s\n", patients[i].name);
        printf("Age: %d\n", patients[i].age);
        printf("Disease: %s\n", patients[i].disease);
    }
}

// Function to search for a patient by ID
void searchPatient() {
    int id, found = 0;
    printf("Enter Patient ID to search: ");
    scanf("%d", &id);
    
    for (int i = 0; i < patientCount; i++) {
        if (patients[i].id == id) {
            printf("\nPatient ID: %d\n", patients[i].id);
            printf("Name: %s\n", patients[i].name);
            printf("Age: %d\n", patients[i].age);
            printf("Disease: %s\n", patients[i].disease);
            found = 1;
            break;
        }
    }
    
    if (!found) {
        printf("Patient with ID %d not found.\n", id);
    }
}

int main() {
    int choice;

    while (1) {
        printf("\n--- Hospital Patient Record System ---\n");
        printf("1. Add Patient\n");
        printf("2. Display Patients\n");
        printf("3. Search Patient\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                addPatient();
                break;
            case 2:
                displayPatients();
                break;
            case 3:
                searchPatient();
                break;
            case 4:
                printf("Exiting...\n");
                return 0;
            default:
                printf("Invalid choice. Try again.\n");
        }
    }
}#include <stdio.h>
#include <string.h>

#define MAX_PATIENTS 100

// Structure to hold patient details
struct Patient {
    int id;
    char name[50];
    int age;
    char disease[50];
} patients[MAX_PATIENTS];

int patientCount = 0;

// Function to add a new patient record
void addPatient() {
    if (patientCount < MAX_PATIENTS) {
        printf("Enter Patient ID: ");
        scanf("%d", &patients[patientCount].id);
        printf("Enter Patient Name: ");
        scanf(" %[^\n]", patients[patientCount].name);
        printf("Enter Age: ");
        scanf("%d", &patients[patientCount].age);
        printf("Enter Disease: ");
        scanf(" %[^\n]", patients[patientCount].disease);
        
        printf("Patient added successfully!\n");
        patientCount++;
    } else {
        printf("Patient record is full!\n");
    }
}

// Function to display all patient records
void displayPatients() {
    if (patientCount == 0) {
        printf("No patient records found.\n");
        return;
    }
    
    printf("\n--- Patient Records ---\n");
    for (int i = 0; i < patientCount; i++) {
        printf("\nPatient ID: %d\n", patients[i].id);
        printf("Name: %s\n", patients[i].name);
        printf("Age: %d\n", patients[i].age);
        printf("Disease: %s\n", patients[i].disease);
    }
}

// Function to search for a patient by ID
void searchPatient() {
    int id, found = 0;
    printf("Enter Patient ID to search: ");
    scanf("%d", &id);
    
    for (int i = 0; i < patientCount; i++) {
        if (patients[i].id == id) {
            printf("\nPatient ID: %d\n", patients[i].id);
            printf("Name: %s\n", patients[i].name);
            printf("Age: %d\n", patients[i].age);
            printf("Disease: %s\n", patients[i].disease);
            found = 1;
            break;
        }
    }
    
    if (!found) {
        printf("Patient with ID %d not found.\n", id);
    }
}

int main() {
    int choice;

    while (1) {
        printf("\n--- Hospital Patient Record System ---\n");
        printf("1. Add Patient\n");
        printf("2. Display Patients\n");
        printf("3. Search Patient\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                addPatient();
                break;
            case 2:
                displayPatients();
                break;
            case 3:
                searchPatient();
                break;
            case 4:
                printf("Exiting...\n");
                return 0;
            default:
                printf("Invalid choice. Try again.\n");
        }
    }
}#include <stdio.h>
#include <string.h>

#define MAX_PATIENTS 100

// Structure to hold patient details
struct Patient {
    int id;
    char name[50];
    int age;
    char disease[50];
} patients[MAX_PATIENTS];

int patientCount = 0;

// Function to add a new patient record
void addPatient() {
    if (patientCount < MAX_PATIENTS) {
        printf("Enter Patient ID: ");
        scanf("%d", &patients[patientCount].id);
        printf("Enter Patient Name: ");
        scanf(" %[^\n]", patients[patientCount].name);
        printf("Enter Age: ");
        scanf("%d", &patients[patientCount].age);
        printf("Enter Disease: ");
        scanf(" %[^\n]", patients[patientCount].disease);
        
        printf("Patient added successfully!\n");
        patientCount++;
    } else {
        printf("Patient record is full!\n");
    }
}

// Function to display all patient records
void displayPatients() {
    if (patientCount == 0) {
        printf("No patient records found.\n");
        return;
    }
    
    printf("\n--- Patient Records ---\n");
    for (int i = 0; i < patientCount; i++) {
        printf("\nPatient ID: %d\n", patients[i].id);
        printf("Name: %s\n", patients[i].name);
        printf("Age: %d\n", patients[i].age);
        printf("Disease: %s\n", patients[i].disease);
    }
}

// Function to search for a patient by ID
void searchPatient() {
    int id, found = 0;
    printf("Enter Patient ID to search: ");
    scanf("%d", &id);
    
    for (int i = 0; i < patientCount; i++) {
        if (patients[i].id == id) {
            printf("\nPatient ID: %d\n", patients[i].id);
            printf("Name: %s\n", patients[i].name);
            printf("Age: %d\n", patients[i].age);
            printf("Disease: %s\n", patients[i].disease);
            found = 1;
            break;
        }
    }
    
    if (!found) {
        printf("Patient with ID %d not found.\n", id);
    }
}

int main() {
    int choice;

    while (1) {
        printf("\n--- Hospital Patient Record System ---\n");
        printf("1. Add Patient\n");
        printf("2. Display Patients\n");
        printf("3. Search Patient\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                addPatient();
                break;
            case 2:
                displayPatients();
                break;
            case 3:
                searchPatient();
                break;
            case 4:
                printf("Exiting...\n");
                return 0;
            default:
                printf("Invalid choice. Try again.\n");
        }
    }
}
